name: Docker Production Build

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build production image
      run: |
        # Create a production-ready Dockerfile
        cat > Dockerfile.prod << 'EOF'
        FROM elixir:1.17
        
        # Install system dependencies
        RUN apt-get update && apt-get install -y \
            build-essential \
            git \
            curl \
            nodejs \
            npm \
            postgresql-client \
            && rm -rf /var/lib/apt/lists/*
        
        WORKDIR /app
        
        # Install hex and rebar
        RUN mix local.hex --force && \
            mix local.rebar --force
        
        # Copy and prepare the application
        COPY . .
        
        # Set production environment
        ENV MIX_ENV=prod
        
        # Configure EXLA for CPU (if needed)
        ENV XLA_TARGET=cpu
        ENV EXLA_TARGET=cpu
        
        # Install dependencies (with EXLA disabled if it fails)
        RUN mix deps.get --only prod || true
        
        # Try to compile with EXLA, fall back without if needed
        RUN (mix deps.compile && mix compile) || \
            (find . -name "mix.exs" -exec sed -i 's/{:exla,/# {:exla,/' {} \; && \
             mix deps.clean --all && \
             mix deps.get --only prod && \
             mix deps.compile && \
             mix compile)
        
        # Create startup script
        RUN echo '#!/bin/bash' > /app/start.sh && \
            echo 'echo "üöÄ VSM 12-MODULE ECOSYSTEM"' >> /app/start.sh && \
            echo 'echo "========================="' >> /app/start.sh && \
            echo 'echo ""' >> /app/start.sh && \
            echo 'echo "Modules: $(find apps -name mix.exs | wc -l) Elixir apps"' >> /app/start.sh && \
            echo 'echo ""' >> /app/start.sh && \
            echo 'echo "Starting VSM ecosystem..."' >> /app/start.sh && \
            echo 'exec mix phx.server' >> /app/start.sh && \
            chmod +x /app/start.sh
        
        EXPOSE 4000 4001 4040 50051
        
        CMD ["/app/start.sh"]
        EOF
        
        # Build and tag
        docker build -f Dockerfile.prod -t ghcr.io/${{ github.repository }}:production .
        docker tag ghcr.io/${{ github.repository }}:production ghcr.io/${{ github.repository }}:${{ github.sha }}
        
        # Push both tags
        docker push ghcr.io/${{ github.repository }}:production
        docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
        
        echo "‚úÖ Production image pushed successfully!"
        echo ""
        echo "üê≥ Available images:"
        echo "  - ghcr.io/${{ github.repository }}:production (latest production build)"
        echo "  - ghcr.io/${{ github.repository }}:${{ github.sha }} (this commit)"
        echo "  - ghcr.io/${{ github.repository }}:latest (simple info image)"
        echo "  - ghcr.io/${{ github.repository }}:final (Elixir environment)"